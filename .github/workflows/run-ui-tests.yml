# GitHub Actions Workflow for launching UI tests on Linux, Windows, and Mac in the following steps:
# - prepare and launch IDE with your plugin and robot-server plugin, which is necessary to interact with UI
# - wait for IDE to start
# - run UI tests with separate Gradle task
#
# Please check https://github.com/JetBrains/intellij-ui-test-robot for information about UI tests with IntelliJ Platform
#
# Workflow is triggered manually.

name: Run UI Tests
on:
  workflow_dispatch:
  push:
    branches: [ main ]
  # Trigger the workflow on any pull request
  pull_request:

jobs:

  testUI:
    runs-on: ${{ matrix.os }}
    name: Test UI on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            runIde: ./gradlew runIdeForUiTests &

    steps:

      # Check out the current repository
      - name: Fetch Sources
        uses: actions/checkout@v4


      # Set up Java environment for the next steps
      - name: Setup JBR 21
        uses: actions/setup-java@v4.6.0
        with:
          distribution: 'jetbrains'
          java-version: 21
          java-package: 'jdk+jcef'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4



      # Run IDEA prepared for UI testing
      - name: Run IDE
        run: ${{ matrix.runIde }}

      # Wait for IDEA to be started
      - name: Health Check
        uses: jtalk/url-health-check-action@v4
        with:
          url: http://127.0.0.1:8082
          max-attempts: 18
          retry-delay: 30s

          # Run tests
      - name: Tests
        run: ./gradlew uiTest -PrunUiTests=true

      - uses: GuillaumeFalourd/wait-sleep-action@v1
        with:
          time: '10'

      - name: Copy logs
        if: ${{ failure() }}
        run: mv build/idea-sandbox/system/log/ build/reports

        # Collect Tests Result of failed tests
      - name: Collect Tests Result
        if: ${{ always() }}
        uses: actions/upload-artifact@v4.6.0
        with:
          name: tests-result-${{ matrix.os }}
          path: ${{ github.workspace }}/build/reports

      - name: Upload Code Coverage Report
        uses: codecov/codecov-action@v5.1.2
        with:
          files: ${{ github.workspace }}/build/reports/jacoco/runIdeUiCodeCoverageReport/runIdeUiCodeCoverageReport.xml
          flags: ui-${{ matrix.os }}
          token: ${{ secrets.CODECOV_TOKEN }}

